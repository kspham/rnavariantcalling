#pushd `dirname $PWD` > /dev/null
FPATH=`pwd`
#popd > /dev/null

# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    unset pydoc

    # reset old environment variables
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi
    if [ -n "$_OLD_VIRTUAL_PYTHONHOME" ] ; then
        PYTHONHOME="$_OLD_VIRTUAL_PYTHONHOME"
        export PYTHONHOME
        unset _OLD_VIRTUAL_PYTHONHOME
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r 2>/dev/null
    fi

    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset VIRTUAL_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelevant variables
deactivate nondestructive

VIRTUAL_ENV="$FPATH/python"

export VIRTUAL_ENV

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/bin:$PATH"
export PATH

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _OLD_VIRTUAL_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi

if [ -z "$VIRTUAL_ENV_DISABLE_PROMPT" ] ; then
    _OLD_VIRTUAL_PS1="$PS1"
    if [ "x" != x ] ; then
        PS1="$PS1"
    else
    if [ "`basename \"$VIRTUAL_ENV\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="[`basename \`dirname \"$VIRTUAL_ENV\"\``] $PS1"
    else
        PS1="(`basename \"$VIRTUAL_ENV\"`)$PS1"
    fi
    fi
    export PS1
fi

alias pydoc="python -m pydoc"

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r 2>/dev/null
fi

export SAMBAMBA=$FPATH/bin/sambamba_v0.5.9
export TEMP=$FPATH/tmp
export HISAT2out=$FPATH/HISAT2
export STARout=$FPATH/STAR
export PERL5LIB=$FPATH/bin/vcftools_0.1.13/perl
export LIB=$FPATH/lib

VCFTOOLS=$FPATH/bin/vcftools_0.1.13/bin/
HISAT2=$FPATH/bin/hisat2-2.0.1-beta
OUTDIR=$FPATH/human


export SRC=$FPATH/src
export CHRO=$FPATH/lib/chr_coordinates.txt
export HUMAN_EDITING_SITES=$FPATH/lib/human_edit.txt
export GTF=$FPATH/lib/Homo_sapiens.GRCh37.75.gtf
export STARREF=$FPATH/STARref/out
export HISAT2REF=$FPATH/HISAT2ref/grch37
export REF=$FPATH/lib/hg19.fa
export FILTER=$FPATH/scripts/filter.sh
export HISAT2_INDEXES=$HISAT2REF

export PATH=$PATH:$SRC:$FPATH/bin:$VCFTOOLS:$HISAT2

mkdir $STARout
mkdir $HISAT2out
